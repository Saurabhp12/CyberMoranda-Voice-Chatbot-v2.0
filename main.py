import requests
import json
from gtts import gTTS
import os
import time

API_KEY = "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"  # üîë ‡§Ø‡§π‡§æ‡§Ç ‡§Ö‡§™‡§®‡§æ OpenRouter API key ‡§°‡§æ‡§≤‡•ã
MODEL = "openai/gpt-3.5-turbo"  # Bhojpuri ‡§∏‡§Æ‡§ù‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡§æ model

def ask_openrouter(prompt):
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": "‡§§‡•Ç ‡§è‡§ï Bhojpuri ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§µ‡•á ‡§µ‡§æ‡§≤‡§æ chatbot ‡§π‡§â‡•§ ‡§õ‡•ã‡§ü, ‡§∏‡§æ‡§´‡§º, ‡§î‡§∞ ‡§∏‡§∞‡§≤ ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡•§"},
            {"role": "user", "content": prompt}
        ],
        "max_tokens": 500,
    }

    print("ü§ñ Thinking...")

    try:
        res = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, data=json.dumps(payload))
        if res.status_code == 200:
            reply = res.json()['choices'][0]['message']['content']
            return reply.strip()
        else:
            return f"‚ùå Error {res.status_code}: {res.text}"
    except Exception as e:
        return f"‚ö†Ô∏è Failed: {e}"

while True:
    user_input = input("üë§ You (Bhojpuri me puchhi): ")
    if user_input.lower() in ['exit', 'quit', 'stop']:
        print("üëã Bye!")
        break

    reply = ask_openrouter(user_input)
    print(f"ü§ñ Cyber Moranda AI:  {reply}")

    # Speak it
    if not reply.startswith("‚ùå") and not reply.startswith("‚ö†Ô∏è"):
        try:
            tts = gTTS(text=reply, lang='hi')
            tts.save("output.mp3")
            os.system("termux-media-player play output.mp3")
        except Exception as e:
            print("‚ùå Unable to speak:", e)
    else:
        print("‚ùå Unable to speak.")
